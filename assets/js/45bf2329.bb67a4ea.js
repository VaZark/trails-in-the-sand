"use strict";(self.webpackChunktil_remaster=self.webpackChunktil_remaster||[]).push([[3211],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=l(t),d=i,m=p["".concat(c,".").concat(d)]||p[d]||f[d]||s;return t?r.createElement(m,a(a({ref:n},u),{},{components:t})):r.createElement(m,a({ref:n},u))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,a=new Array(s);a[0]=p;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var l=2;l<s;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},981:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return p}});var r=t(7462),i=t(3366),s=(t(7294),t(3905)),a=["components"],o={},c="Basic Plugin",l={unversionedId:"Basics/useful refs/bare_basic_plugin",id:"Basics/useful refs/bare_basic_plugin",title:"Basic Plugin",description:"This is super basic plugin architecture is useful when you need hashmap style action list of classes that conform to a standard and in turn allow you to call and execute them anywhere in the program",source:"@site/docs-python/Basics/useful refs/bare_basic_plugin.md",sourceDirName:"Basics/useful refs",slug:"/Basics/useful refs/bare_basic_plugin",permalink:"/docs-python/Basics/useful refs/bare_basic_plugin",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Miscellaneous Libraries",permalink:"/docs-python/Basics/useful refs/Misc lib"},next:{title:"Parsing Form data in python",permalink:"/docs-python/Basics/useful refs/form_parser"}},u=[],f={toc:u};function p(e){var n=e.components,t=(0,i.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"basic-plugin"},"Basic Plugin"),(0,s.kt)("p",null,"This is super basic plugin architecture is useful when you need hashmap style action list of classes that conform to a standard and in turn allow you to call and execute them anywhere in the program"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'class IAction:\n    def run(self, data=None, *args, **kwargs):\n        raise NotImplementedError("Missing implementation")\n\n\nclass ActionMount:\n\n    registered_actions = {}\n\n    def register(self, id, ExceutableClass: IAction):\n        if id in self.registered_actions.keys():\n            raise Exception("Action with this id already exists")\n        \n        print(f"Registering {id}")\n\n        self.registered_actions[id] = ExceutableClass\n\n    def get_action(self, id):\n        if id not in self.registered_actions.keys():\n            raise Exception("Action with this id does not exist")\n\n        return self.registered_actions[id]\n\n    def delete_action(self, id):\n        if id not in self.registered_actions.keys():\n            raise Exception("Action with this id does not exist")\n\n        del self.registered_actions[id]\n')))}p.isMDXComponent=!0}}]);