"use strict";(self.webpackChunktil_remaster=self.webpackChunktil_remaster||[]).push([[3570],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=i.createContext({}),l=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return i.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},f=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),f=l(t),m=r,d=f["".concat(c,".").concat(m)]||f[m]||p[m]||a;return t?i.createElement(d,o(o({ref:n},u),{},{components:t})):i.createElement(d,o({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=f;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9523:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return f}});var i=t(7462),r=t(3366),a=(t(7294),t(3905)),o=["components"],s={},c="What are Mixins?",l={unversionedId:"Basics/Mixins",id:"Basics/Mixins",title:"What are Mixins?",description:"Introduction",source:"@site/docs-python/Basics/Mixins.md",sourceDirName:"Basics",slug:"/Basics/Mixins",permalink:"/docs-python/Basics/Mixins",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Environment",permalink:"/docs-python/Basics/Environment"},next:{title:"Testing",permalink:"/docs-python/Basics/Testing"}},u=[{value:"Introduction",id:"introduction",children:[],level:2}],p={toc:u};function f(e){var n=e.components,t=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"what-are-mixins"},"What are Mixins?"),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"A mixin is a stand-alone base type that provides limited functionality and polymorphic resonance for a child class. Mixins only exist in multiple-inheritance languages. You can't do a mixin in Java or C#.")),(0,a.kt)("p",null,"Mixins are essentially ways of extending functionality of a class. It is used to implement a specific functionality that can be shared across multiple classes that need not be logically related but require the implementation. Imagine an implemened interface that is being extended by different classes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\nclass Mixin_class(object):\n  def mixin_fn(self):\n    print("Mixin")\n\n\nclass Random_class(Mixin_class): # can now access mixin_fn()\n  pass\n')),(0,a.kt)("p",null,"Since mixins are used in multipe inheritance languages, any class can inherit multiple mixins. In case of conflicting names, the left-most implementation is used (due to python's Right-to-Left hierarchy)."),(0,a.kt)("p",null,"In frameworks like DRF, mixins are used to define specific child classes based off mixins. Eg: ",(0,a.kt)("inlineCode",{parentName:"p"},"ListCreateAPIView")," is defined by inheriting the ",(0,a.kt)("inlineCode",{parentName:"p"},"GenericAPIView"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"ListModelMixin")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"CreateModelMixin"),"."))}f.isMDXComponent=!0}}]);