"use strict";(self.webpackChunktil_remaster=self.webpackChunktil_remaster||[]).push([[8856],{7674:function(e){e.exports=JSON.parse('{"pluginId":"docs-devops","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Docker","href":"/docs-devops/","docId":"index"},{"type":"category","label":"AWS","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Elastic Beanstalk","href":"/docs-devops/aws/AWS Beanstalk","docId":"aws/AWS Beanstalk"},{"type":"link","label":"Chalice","href":"/docs-devops/aws/AWS Chaice","docId":"aws/AWS Chaice"}],"href":"/docs-devops/aws/"},{"type":"category","label":"Docker","collapsible":true,"collapsed":true,"items":[],"href":"/docs-devops/Docker/"}]},"docs":{"aws/AWS Beanstalk":{"id":"aws/AWS Beanstalk","title":"Elastic Beanstalk","description":"The core idea behind elastic beanstalk is to help application developers not worry about server setup (too much). It abstracts away server setup for popular web backend languages such as Java, python, Go etc.","sidebar":"tutorialSidebar"},"aws/AWS Chaice":{"id":"aws/AWS Chaice","title":"Chalice","description":"Chalice is python serverless framework provided by AWS","sidebar":"tutorialSidebar"},"aws/index":{"id":"aws/index","title":"Fundamentals","description":"At the heart of AWS\'s hosting services are a select set of components that everything else is built around. They are,","sidebar":"tutorialSidebar"},"Docker/index":{"id":"Docker/index","title":"Docker","description":"Docker is super useful in isolating applications and creating deterministic builds of your application. Its best feature is that these isolated containers can be treated as services in a containerised network. The dev has ability to choose the services and ports to expose to the world, as all docker containers are private by default.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Docker","description":"Docker is super useful in isolating applications and creating deterministic builds of your application. Its best feature is that these isolated containers can be treated as services in a containerised network. The dev has ability to choose the services and ports to expose to the world, as all docker containers are private by default.","sidebar":"tutorialSidebar"}}}')}}]);